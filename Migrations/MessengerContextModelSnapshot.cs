// <auto-generated />
using CSharpMessenger;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CSharpMessenger.Migrations
{
    [DbContext(typeof(MessengerContext))]
    partial class MessengerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CSharpMessenger.models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("fromuserid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("messagetext")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("touserid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("fromuserid");

                    b.HasIndex("touserid");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("CSharpMessenger.models.User", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CSharpMessenger.models.Message", b =>
                {
                    b.HasOne("CSharpMessenger.models.User", "fromuser")
                        .WithMany()
                        .HasForeignKey("fromuserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSharpMessenger.models.User", "touser")
                        .WithMany()
                        .HasForeignKey("touserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fromuser");

                    b.Navigation("touser");
                });
#pragma warning restore 612, 618
        }
    }
}
